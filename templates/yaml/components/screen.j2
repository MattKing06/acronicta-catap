{%set ns = namespace(v_device_names=[], v_device_values=[], h_device_names=[], h_device_values=[])%}
{
  "controls_information": {
    "movement_type":
    {% if "movement_type" in controls_information %}
    "{{ controls_information["movement_type"] }}",
    {%else%}
    missing_property_default_text
    {% endif %}
    {% if "vertical_devices" in controls_information %}
    "vertical_devices": {
    {%for key, value in controls_information["vertical_devices"].items()%}
      {% do ns.v_device_names.append(key)%}
      {% do ns.v_device_values.append(value)%}
      "{{key}}": {{value}}{% if not loop.last %},{% endif %}
    {%endfor%}
    },
    {% endif %}
    {% if "horizontal_devices" in controls_information %}
    "horizontal_devices": {
    {%for key, value in controls_information["horizontal_devices"].items()%}
      {% do ns.h_device_names.append(key)%}
      {% do ns.h_device_values.append(value)%}
       "{{key}}": {{value}}{% if not loop.last %},{% endif %}
    {%endfor%}
    },
    {% endif %}
    
    "pv_record_map": {
      {% set comma = joiner(",") %}
      {% if "POS" in pv_records %}{{ comma() }}
      "POS": {
        "type": "state",
        "states": {
        {%if ns.v_device_names is defined%}
          {% for key, value in ns.v_device_names|zip(ns.v_device_values) %}
            "{{key}}": {{value}}{% if not loop.last %},{% endif %}
          {% endfor %}
        {% else %}
          {{ missing_state_map | tojson }}
        {% endif %}
        },
        "read_only": false,
        "description": "Vertical Device state",
        "pv": "{{ pos_pv if pos_pv is defined else name ~ ':POS' }}"
      }
      {% endif %}
      {% if "MOVING" in pv_records %}{{ comma() }}
      "MOVING": {
        "type": "binary",
        "description": "Screen moving flag",
        "pv": "{{ moving_pv if moving_pv is defined else name ~ ':MOVING' }}"
      }
      {% endif %}
      {% if "EN" in pv_records %}{{ comma() }}
      "EN": {
        "type": "binary",
        "read_only": false,
        "description": "Screen enable flag",
        "pv": "{{ en_pv if en_pv is defined else name ~ ':EN' }}"
      }
      {% endif %}
      {% if "V_POS" in pv_records %}{{ comma() }}
      "V_POS": {
        "type": "state",
        "states": {
        {%if ns.v_device_names is defined%}
          {% for key, value in ns.v_device_names|zip(ns.v_device_values) %}
            "{{key}}": {{value}}{% if not loop.last %},{% endif %}
          {% endfor %}
        {% else %}
          {{ missing_state_map | tojson }}
        {% endif %}
        },
        "read_only": false,
        "description": "Vertical Device state",
        "pv": "{{ v_pos_pv if v_pos_pv is defined else name ~ ':V:POS' }}"
      }
      {% endif %}
      {% if "V_ACTPOS" in pv_records %}{{ comma() }}
      "V_ACTPOS": {
        "type": "scalar",
        "description": "Screen actuator position",
        "pv": "{{ v_actpos_pv if v_actpos_pv is defined else name ~ ':V:ACTPOS' }}"
      }
      {% endif %}
      {% if "V_MOVING" in pv_records %}{{ comma() }}
      "V_MOVING": {
        "type": "binary",
        "description": "Screen moving flag",
        "pv": "{{ v_moving_pv if v_moving_pv is defined else name ~ ':V:MOVING' }}"
      }
      {% endif %}
      {% if "V_EN" in pv_records %}{{ comma() }}
      "V_EN": {
        "type": "binary",
        "read_only": false,
        "description": "Screen enable flag",
        "pv": "{{ v_en_pv if v_en_pv is defined else name ~ ':V:EN' }}"
      }
      {% endif %}
      {% if "H_POS" in pv_records %}{{ comma() }}
      "H_POS": {
        "type": "state",
         "states": {
        {%if ns.h_device_names is defined%}
          {% for key, value in ns.h_device_names|zip(ns.h_device_values) %}
            "{{key}}": {{value}}{% if not loop.last %},{% endif %}
          {% endfor %}
        {% else %}
          {{ missing_state_map | tojson }}
        {% endif %}
        },
        "read_only": false,
        "description": "Horizontal Device state",
        "pv": "{{ h_pos_pv if h_pos_pv is defined else name ~ ':H:POS' }}"
      }
      {% endif %}
      {% if "H_ACTPOS" in pv_records %}{{ comma() }}
      "H_ACTPOS": {
        "type": "scalar",
        "description": "Screen actuator position",
        "pv": "{{ h_actpos_pv if h_actpos_pv is defined else name ~ ':H:ACTPOS' }}"
      }
      {% endif %}
      {% if "H_MOVING" in pv_records %}{{ comma() }}
      "H_MOVING": {
        "type": "binary",
        "description": "Screen moving flag",
        "pv": "{{ h_moving_pv if h_moving_pv is defined else name ~ ':H:MOVING' }}"
      }
      {% endif %}
      {% if "H_EN" in pv_records %}{{ comma() }}
      "H_EN": {
        "type": "binary",
        "read_only": false,
        "description": "Screen enable flag",
        "pv": "{{ h_en_pv if h_en_pv is defined else name ~ ':H:EN' }}"
      }
      {% endif %}
    }
  },
"properties": {
  {%- set props = [] %}
  {%- do props.append('"name": "' ~ name ~ '"') %}
  {%- do props.append('"hardware_type": "Screen"') %}
  {%- do props.append('"name_alias": "' ~ name_alias ~ '"') %}
  {%- do props.append('"machine_area": "' ~ machine_area ~ '"') %}
  {%- do props.append('"position": ' ~ position) %}
  {%- if "type" in properties %}
    {%- do props.append('"type": "' ~ properties["type"] ~ '"') %}
  {%- endif %}
  {%- if "camera_name" in properties %}
    {%- do props.append('"camera_name": "' ~ properties["camera_name"] ~ '"') %}
  {%- endif %}
  {%- if "has_camera" in properties %}
    {%- do props.append('"has_camera": ' ~ (properties["has_camera"] | lower)) %}
  {%- endif %}
  {%- if "set_max_wait_time" in properties %}
    {%- do props.append('"set_max_wait_time": ' ~ properties["set_max_wait_time"]) %}
  {%- endif %}
  {%- if "virtual_name" in properties %}
    {%- do props.append('"virtual_name": "' ~ properties["virtual_name"] ~ '"') %}
  {%- endif %}
  {{ props | join(',\n    ') }}
}
}